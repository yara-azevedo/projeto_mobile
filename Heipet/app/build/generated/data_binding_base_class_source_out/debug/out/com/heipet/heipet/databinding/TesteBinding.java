// Generated by view binder compiler. Do not edit!
package com.heipet.heipet.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.constraint.ConstraintLayout;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.viewbinding.ViewBindings;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import com.heipet.heipet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TesteBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button button;

  @NonNull
  public final EditText etNome;

  @NonNull
  public final EditText etSenha;

  @NonNull
  public final EditText etSenha2;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final ProgressBar progressBar3;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView2;

  private TesteBinding(@NonNull ConstraintLayout rootView, @NonNull Button button,
      @NonNull EditText etNome, @NonNull EditText etSenha, @NonNull EditText etSenha2,
      @NonNull ImageView imageView3, @NonNull ProgressBar progressBar3, @NonNull TextView textView,
      @NonNull TextView textView2) {
    this.rootView = rootView;
    this.button = button;
    this.etNome = etNome;
    this.etSenha = etSenha;
    this.etSenha2 = etSenha2;
    this.imageView3 = imageView3;
    this.progressBar3 = progressBar3;
    this.textView = textView;
    this.textView2 = textView2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TesteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TesteBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.teste, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TesteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button;
      Button button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.et_nome;
      EditText etNome = ViewBindings.findChildViewById(rootView, id);
      if (etNome == null) {
        break missingId;
      }

      id = R.id.et_senha;
      EditText etSenha = ViewBindings.findChildViewById(rootView, id);
      if (etSenha == null) {
        break missingId;
      }

      id = R.id.et_senha2;
      EditText etSenha2 = ViewBindings.findChildViewById(rootView, id);
      if (etSenha2 == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.progressBar3;
      ProgressBar progressBar3 = ViewBindings.findChildViewById(rootView, id);
      if (progressBar3 == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      return new TesteBinding((ConstraintLayout) rootView, button, etNome, etSenha, etSenha2,
          imageView3, progressBar3, textView, textView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
